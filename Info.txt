CSS basics
-----------

Prerequisites:
---------------
- little bit of HTML
------------------------------------------------------------------------------------------------------

What will be covered:
-----------------------
- what CSS is
- CSS syntax
- Elements, classes and Id selectors
- Formatting text
- The box model
- put it all together
------------------------------------------------------------------------------------------------------

LESSON-1 - Intro, Default browser styles, Syntax
--------------------------------------------------

What is CSS?
--------------
- CSS - Cascading Style Sheets
- CSS controls the presentation of a HTML page
- Constantly chaging standards
   - currently CSS3
- CSS & CSS3 are the samething
- varying support across the browsers - check this before using CSS in any browser
------------------------------------------------------------------------------------------------------

Default browser styles:
------------------------
- All browsers apply some basic styling to HTML
   - Margin, padding b/wn elements, underlining links, etc.
- Browsers (eg- chrome, firefox, IE) apply their own default styles
   - There is not much change b/wn them, but there might be slight diff. like font-size, padding,
      margin, etc.
- We need to be aware of these default styles since we need to override these styles with our own
  when we write our CSS
------------------------------------------------------------------------------------------------------

CSS Syntax:
------------
- CSS is a collection of rules

- Each rule targets specific tags or elements in the HTML document and within each rule we can 
  specify how each tag or element should look visually
    -  Rule which targets all 'p' tags on the page
    -  Rule which targets all tags with an #id
    -  Rule which targets all 'a' tags in the 'nav'
- Rules come in 2 parts
    - All CSS rules are made up of 2 components

        SELECTOR        DECLARATION
        
       #page-header   {font-size:10px;}
- Selectors:
  ----------
  - Selectors can target tag names, ids, classes and many other things
    
    - #header p {declaration}
    - .comment div {declaration}
    - li {declaration}
- Declaration:
  ------------
  - Delcaration contain properties and values

    - #selector {font-size:10px; }
    - #selector {
        font-size:10px; 
        color:red;
        }
------------------------------------------------------------------------------------------------------

LESSON-2 - Inline & Embedded styles
-------------------------------------

3 ways to add CSS:
------------------
- Inline styling
  --------------
   - Time consuming to style multiple elements
   - Tricky to manage & update
   - Messy HTML doc. 

   - Good for very specialised rules - for eg- a warning msg where we need a specific style to
                                               override anyother styles

    - Inline style has been applied for the <div id="header">
      when we have multiple <div> tags, it is hard to apply inline styles for all of them.

- Embedded styling
  ----------------
  - Time consuming to apply global styles
  - Hard to maintain & update

  - Good for making specific page styles

  - Embedded style has been applied for all the <p> tags in both the pages.
    It is hard to apply this type of styling when we have huge number of pages

- Both Inline & Embedded styles can be used when a specific page related or tag related style
  needs to be applied

  --------------------------------
  LESSON-3 - External stylesheet
  --------------------------------

- External style sheets - most preferred
  ---------------------
  - Quicker & easier

  - Add the below line in the <head> of the <html> to link the external style sheet

    <link rel="stylesheet" type="text/css" href="CSS/syntax.css" />
        
    - rel - relation
    - type - type of the file/doc.
    - href - location of the external style sheet

------------------------------------------------------------------------------------------------------

  LESSON-4 - Adding Comments & Targeting Elements/Tags
  -----------------------------------------------------

CSS comments:
-------------
- way to add some plain text to the styles for reference
- also to comment out a set of rules

    syntax:
    -------
    /* comment line */

------------------------------------------------------------------------------------------------------

Targeting Elements:
-------------------

In order to apply a style for any element / tag, add a rule like below.

This rule will target all the p tags and color them red.
  p {
    color: red;
  }

------------------------------------------------------------------------------------------------------

  LESSON-5 - Targeting classes & Ids, Cascade & Conflicts
  ---------------------------------------------------------

Targeting classes & IDs:
------------------------

    Classes & IDs
    -------------
    - Both are ways to describe page contents 
    - Classes can be used multiple times in a page
    - IDs can be used only once per page - they're unique

    Syntax for class:
      .classname {
        rule
      }

    Syntax for Id:
      #Idname {
        rule
      }

------------------------------------------------------------------------------------------------------

The Cascade & CSS conflicts:
----------------------------
  Conflicts:
  ---------
  - Created when a particular element is targeted more than once

  Cascading:
  ----------
  - Once a conflict is created, the control will move/cascade form top to bottom
    and the bottom most rule will be considered

  - span is targeted twice in syntax.css - so the second rule will be considered in all the pages
  - span is targeted again the index.html - embedded styles - so this style will be 
    considered for this page
  - span is targeted again in index.html - inline style for a specific tag - this style will
    be considered for this specific tag

    Cascading rep.
    --------------

    CSS runs from top to bottom

    External CSS - bottom most rule
        |
        |____Embedded Styles - bottom most rule
                |
                |_____ Inline styles
                
------------------------------------------------------------------------------------------------------

  LESSON-6 - Inheritance:
  ------------------------

<body> ---> Parent
  <div> ---> Child of the body
    <p> Text </p> ---> Child of the div / Grandchild of the body
  </div>
  <h1> Text </h1> ---> Child of the body
</body>

- If any style is applied to the body, it will be inherited to all the elements inside the body.

- There are cases where inheritance won't work.

  For e.g. The <a> tag will never inherit the styles of it's parent element, since the default browser style 
  for the <a> tag is "a {color: blue; text-decoration: underline;}". However, this style can be overriden by
  specifically targeting the <a> tag.

------------------------------------------------------------------------------------------------------

  LESSON-7 - Selector Specificity:
  ---------------------------------

Conflicts & Cascade:

  p { color: red; }
  p { color: black; } --> This rule wins as CSS runs from top to bottom

  Where as
    #main-content p { --> This rule wins as this is more specific
      color: red;
    }

    p {
      color: black;
    }

How does CSS know which rule is more specific? It's based on the points system below.

  ID's - 100 points
  Classes - 10 points
  Elements - 1 point

  The selector which has the most points wins

  In the above eg.

     __ 100 points  __ 1 point
    |              |
    #main-content  p { --> 101 points in total, this rule wins
      color: red;
    }

    p { --> 1 point in total
      color: black;
    }

------------------------------------------------------------------------------------------------------

  LESSON-8 - IMPORTANT DECLARATION
  --------------------------------

  - Tool we use within the CSS conflicts to make a property important which means, nothing can
    override it
  - Even if we have a rule that is more specific, this can't be overriden

    Syntax:
      p {
        color: red !important;
      }

  - Use only when necessary as it can complicate the CSS

------------------------------------------------------------------------------------------------------

  LESSON-9 - TARGETING MULTIPLE ELEMENTS
  ---------------------------------------

  - When a common style needs to be applied for multiple elements follow the syntax below

      p, span, a, li { --> separate the elements using a comma
        rules
      }

------------------------------------------------------------------------------------------------------

  LESSON-10 - DESCENDANT SELECTORS
  ---------------------------------

  <body>
    <div> ---> descendant of body
      <h1>Text</h1> ---> descendant of body & div
    </div>
    <h1>Text</h1> ---> descendant of body
  </body>

------------------------------------------------------------------------------------------------------

